{"ast":null,"code":"var _jsxFileName = \"/Users/phuoc/taskbox/src/components/Task.js\";\nimport React from 'react';\nexport default function Task({\n  task: {\n    id,\n    title,\n    state\n  },\n  onArchiveTask,\n  onPinTask\n}) {\n  return React.createElement(\"div\", {\n    className: `list-item ${state}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    defaultChecked: state === 'TASK_ARCHIVED',\n    disabled: true,\n    name: \"checked\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"checkbox-custom\",\n    onClick: () => onArchiveTask(id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    value: title,\n    readOnly: true,\n    placeholder: \"Input title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"actions\",\n    onClick: event => event.stopPropagation(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, state !== 'TASK_ARCHIVED' && React.createElement(\"a\", {\n    onClick: () => onPinTask(id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: `icon-star`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/Users/phuoc/taskbox/src/components/Task.js"],"names":["React","Task","task","id","title","state","onArchiveTask","onPinTask","event","stopPropagation"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eACI,SAASC,IAAT,CAAe;AACXC,EAAAA,IAAI,EAAE;AACFC,IAAAA,EADE;AAEFC,IAAAA,KAFE;AAGFC,IAAAA;AAHE,GADK;AAKTC,EAAAA,aALS;AAKMC,EAAAA;AALN,CAAf,EAME;AACE,SACI;AAAK,IAAA,SAAS,EAAG,aAAYF,KAAM,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACU;AAAO,IAAA,SAAS,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACd;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,cAAc,EAAEA,KAAK,KAAK,eAF5B;AAGE,IAAA,QAAQ,EAAE,IAHZ;AAIE,IAAA,IAAI,EAAC,SAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADc,EAOd;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAkC,IAAA,OAAO,EAAE,MAAMC,aAAa,CAACH,EAAD,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPc,CADV,EAUI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,KAAK,EAAEC,KAFX;AAGI,IAAA,QAAQ,EAAE,IAHd;AAII,IAAA,WAAW,EAAC,aAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAVJ,EAkBI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAyB,IAAA,OAAO,EAAEI,KAAK,IAAIA,KAAK,CAACC,eAAN,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,KAAK,KAAK,eAAV,IACG;AAAG,IAAA,OAAO,EAAE,MAAME,SAAS,CAACJ,EAAD,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,SAAS,EAAG,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFR,CAlBJ,CADJ;AA4BH","sourcesContent":["import React from 'react';\n    \nexport default \n    function Task ({\n        task :{\n            id,\n            title,\n            state,\n        },onArchiveTask, onPinTask\n    }){\n        return(\n            <div className={`list-item ${state}`}>\n                      <label className=\"checkbox\">\n        <input\n          type=\"checkbox\"\n          defaultChecked={state === 'TASK_ARCHIVED'}\n          disabled={true}\n          name=\"checked\"\n        />\n        <span className=\"checkbox-custom\" onClick={() => onArchiveTask(id)} />\n      </label>\n                <div className=\"title\">\n                    <input \n                        type=\"text\"\n                        value={title}\n                        readOnly={true}\n                        placeholder=\"Input title\"\n                    />\n                </div>\n                <div className=\"actions\" onClick={event => event.stopPropagation()}>\n                    {state !== 'TASK_ARCHIVED' && (\n                        <a onClick={() => onPinTask(id)} >\n                            <span className={`icon-star`} />\n                        </a>\n                    )}\n                </div>\n            </div>\n        );\n    }\n"]},"metadata":{},"sourceType":"module"}