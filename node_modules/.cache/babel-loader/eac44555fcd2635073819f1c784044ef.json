{"ast":null,"code":"import _objectSpread from \"/Users/phuoc/taskbox/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/phuoc/taskbox/src/components/Task.stories.js\";\nimport React from 'react';\nimport { action } from '@storybook/addon-actions';\nimport Task from './Task';\nexport const taskData = {\n  id: '1',\n  title: 'Test Task',\n  state: 'TASK_INBOX',\n  updateAt: new Date(2020, 0, 1, 9, 0)\n};\nexport const actionsData = {\n  onPinTask: action('onPinTask'),\n  onArchiveTask: action('onArchiveTask')\n};\nexport const Default = () => {\n  return React.createElement(Task, Object.assign({\n    task: _objectSpread({}, taskData)\n  }, actionsData, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }));\n};\nDefault.displayName = \"Default\";\nexport const Pinned = () => React.createElement(Task, Object.assign({\n  task: _objectSpread({}, taskData, {\n    state: 'TASK_PINNED'\n  })\n}, actionsData, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}));\nPinned.displayName = \"Pinned\";\nexport const Archived = () => React.createElement(Task, Object.assign({\n  task: _objectSpread({}, taskData, {\n    state: 'TASK_ARCHIVED'\n  })\n}, actionsData, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}));\nArchived.displayName = \"Archived\";\nDefault.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Default\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/Task.stories.js\"] = {\n    name: \"Default\",\n    docgenInfo: Default.__docgenInfo,\n    path: \"src/components/Task.stories.js\"\n  };\n}\n\nPinned.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Pinned\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/Task.stories.js\"] = {\n    name: \"Pinned\",\n    docgenInfo: Pinned.__docgenInfo,\n    path: \"src/components/Task.stories.js\"\n  };\n}\n\nArchived.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Archived\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/Task.stories.js\"] = {\n    name: \"Archived\",\n    docgenInfo: Archived.__docgenInfo,\n    path: \"src/components/Task.stories.js\"\n  };\n}","map":{"version":3,"sources":["/Users/phuoc/taskbox/src/components/Task.stories.js"],"names":["React","action","Task","taskData","id","title","state","updateAt","Date","actionsData","onPinTask","onArchiveTask","Default","Pinned","Archived"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,OAAO,MAAMC,QAAQ,GAAG;AACpBC,EAAAA,EAAE,EAAC,GADiB;AAEpBC,EAAAA,KAAK,EAAC,WAFc;AAGpBC,EAAAA,KAAK,EAAC,YAHc;AAIpBC,EAAAA,QAAQ,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAc,CAAd,EAAgB,CAAhB,EAAkB,CAAlB,EAAoB,CAApB;AAJU,CAAjB;AAMP,OAAO,MAAMC,WAAW,GAAG;AACvBC,EAAAA,SAAS,EAAET,MAAM,CAAC,WAAD,CADM;AAEvBU,EAAAA,aAAa,EAAEV,MAAM,CAAC,eAAD;AAFE,CAApB;AAIP,OAAO,MAAMW,OAAO,GAAG,MAAM;AACzB,SAAO,oBAAC,IAAD;AAAM,IAAA,IAAI,oBAAMT,QAAN;AAAV,KAA+BM,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACH,CAFM;AAAMG,O;AAGb,OAAO,MAAMC,MAAM,GAAG,MAAM,oBAAC,IAAD;AAAM,EAAA,IAAI,oBAAMV,QAAN;AAAeG,IAAAA,KAAK,EAAC;AAArB;AAAV,GAAmDG,WAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;AAAMI,M;AACb,OAAO,MAAMC,QAAQ,GAAG,MACpB,oBAAC,IAAD;AAAM,EAAA,IAAI,oBAAOX,QAAP;AAAiBG,IAAAA,KAAK,EAAC;AAAvB;AAAV,GAAuDG,WAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADG;AAAMK,Q","sourcesContent":["import React from 'react';\nimport { action } from '@storybook/addon-actions';\nimport Task from './Task';\n\nexport const taskData = {\n    id:'1',\n    title:'Test Task',\n    state:'TASK_INBOX',\n    updateAt: new Date(2020,0,1,9,0)\n};\nexport const actionsData = {\n    onPinTask: action('onPinTask'),\n    onArchiveTask: action('onArchiveTask'),\n};\nexport const Default = () => {\n    return <Task task={{...taskData}} {...actionsData}/>;\n};\nexport const Pinned = () => <Task task={{...taskData,state:'TASK_PINNED'}} {...actionsData}/>;\nexport const Archived = () => (\n    <Task task ={{...taskData, state:'TASK_ARCHIVED'}} {...actionsData} />\n)"]},"metadata":{},"sourceType":"module"}