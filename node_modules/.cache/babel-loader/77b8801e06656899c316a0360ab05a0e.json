{"ast":null,"code":"var _jsxFileName = \"/Users/phuoc/taskbox/src/components/TaskList.js\";\nimport React from 'react';\nimport Task from './Task';\nimport PropTypes from 'prop-types';\n\nfunction TaskList({\n  loading,\n  tasks,\n  onPinTask,\n  onArchiveTask\n}) {\n  const events = {\n    onPinTask,\n    onArchiveTask\n  };\n  const LoadingRow = React.createElement(\"div\", {\n    className: \"loading-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"glow-checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"glow-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Loading\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"cool\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"state\")));\n\n  if (loading) {\n    return React.createElement(\"div\", {\n      className: \"list-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, LoadingRow, LoadingRow, LoadingRow, LoadingRow, LoadingRow, LoadingRow);\n  }\n\n  if (tasks.length === 0) {\n    return React.createElement(\"div\", {\n      className: \"list-items\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"wrapper-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"icon-check\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"title-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"You have no tasks\"), React.createElement(\"div\", {\n      className: \"subtitle-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Sit back and relax\")));\n  }\n\n  const tasksInOrder = [...tasks.filter(t => t.state === 'TASK_PINNED'), ...tasks.filter(t => t.state !== 'TASK_PINNED')];\n  return React.createElement(\"div\", {\n    className: \"list-items\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, tasksInOrder.map(task => React.createElement(Task, Object.assign({\n    key: task.id,\n    task: task\n  }, events, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }))));\n}\n\nTaskList.propTypes = {\n  loading: PropTypes.bool,\n  tasks: PropTypes.arrayOf(Task.propTypes.task).isRequired,\n  onPinTask: PropTypes.func.isRequired,\n  onArchiveTask: PropTypes.func.isRequired\n};\nTaskList.defaultProps = {\n  loading: false\n};\nexport default TaskList;","map":{"version":3,"sources":["/Users/phuoc/taskbox/src/components/TaskList.js"],"names":["React","Task","PropTypes","TaskList","loading","tasks","onPinTask","onArchiveTask","events","LoadingRow","length","tasksInOrder","filter","t","state","map","task","id","propTypes","bool","arrayOf","isRequired","func","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,SAASC,QAAT,CAAmB;AAAEC,EAAAA,OAAF;AAAYC,EAAAA,KAAZ;AAAmBC,EAAAA,SAAnB;AAA8BC,EAAAA;AAA9B,CAAnB,EAAiE;AAC7D,QAAMC,MAAM,GAAG;AACXF,IAAAA,SADW;AAEXC,IAAAA;AAFW,GAAf;AAKA,QAAME,UAAU,GACZ;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHJ,CAFJ,CADJ;;AAWA,MAAGL,OAAH,EAAY;AACR,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKK,UADL,EAEKA,UAFL,EAGKA,UAHL,EAIKA,UAJL,EAKKA,UALL,EAMKA,UANL,CADJ;AAUH;;AACD,MAAGJ,KAAK,CAACK,MAAN,KAAiB,CAApB,EAAuB;AACnB,WACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFJ,EAGI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHJ,CADJ,CADJ;AASH;;AAED,QAAMC,YAAY,GAAG,CACjB,GAAGN,KAAK,CAACO,MAAN,CAAaC,CAAC,IAAIA,CAAC,CAACC,KAAF,KAAY,aAA9B,CADc,EAEjB,GAAGT,KAAK,CAACO,MAAN,CAAaC,CAAC,IAAIA,CAAC,CAACC,KAAF,KAAY,aAA9B,CAFc,CAArB;AAKA,SACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,YAAY,CAACI,GAAb,CAAiBC,IAAI,IAClB,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAIA,IAAI,CAACC,EAAlB;AAAsB,IAAA,IAAI,EAAED;AAA5B,KAAsCR,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADH,CADL,CADJ;AAOH;;AAGDL,QAAQ,CAACe,SAAT,GAAqB;AACjBd,EAAAA,OAAO,EAAEF,SAAS,CAACiB,IADF;AAEjBd,EAAAA,KAAK,EAAEH,SAAS,CAACkB,OAAV,CAAkBnB,IAAI,CAACiB,SAAL,CAAeF,IAAjC,EAAuCK,UAF7B;AAGjBf,EAAAA,SAAS,EAAEJ,SAAS,CAACoB,IAAV,CAAeD,UAHT;AAIjBd,EAAAA,aAAa,EAAEL,SAAS,CAACoB,IAAV,CAAeD;AAJb,CAArB;AAOElB,QAAQ,CAACoB,YAAT,GAAwB;AACtBnB,EAAAA,OAAO,EAAE;AADa,CAAxB;AAGF,eAAeD,QAAf","sourcesContent":["import React from 'react';\nimport Task from './Task';\nimport PropTypes from 'prop-types';\n\nfunction TaskList ({ loading , tasks, onPinTask, onArchiveTask}) {\n    const events = {\n        onPinTask,\n        onArchiveTask,\n    };\n\n    const LoadingRow = (\n        <div className=\"loading-item\">\n            <span className=\"glow-checkbox\" />\n            <span className=\"glow-text\">\n                <span>Loading</span>\n                <span>cool</span>\n                <span>state</span>\n            </span>\n        </div>\n    );\n\n    if(loading) {\n        return (\n            <div className=\"list-item\">\n                {LoadingRow}\n                {LoadingRow}\n                {LoadingRow}\n                {LoadingRow}\n                {LoadingRow}\n                {LoadingRow}\n            </div>\n        ) \n    }\n    if(tasks.length === 0) {\n        return (\n            <div className=\"list-items\">\n                <div className=\"wrapper-message\">\n                    <span className=\"icon-check\"/>\n                    <div className=\"title-message\">You have no tasks</div>\n                    <div className=\"subtitle-message\">Sit back and relax</div>\n                </div>\n            </div>\n        ) ;\n    }\n\n    const tasksInOrder = [\n        ...tasks.filter(t => t.state === 'TASK_PINNED'),\n        ...tasks.filter(t => t.state !== 'TASK_PINNED'),\n    ];\n\n    return(\n        <div className=\"list-items\">\n            {tasksInOrder.map(task => (\n                <Task key = {task.id} task={task} {...events}/>\n            ))}\n        </div>\n    );\n}\n\n\nTaskList.propTypes = {\n    loading: PropTypes.bool,\n    tasks: PropTypes.arrayOf(Task.propTypes.task).isRequired,\n    onPinTask: PropTypes.func.isRequired,\n    onArchiveTask: PropTypes.func.isRequired,\n  };\n  \n  TaskList.defaultProps = {\n    loading: false,\n  };\nexport default TaskList;"]},"metadata":{},"sourceType":"module"}